(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const h of s.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&r(h)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();class V{constructor(e,t){this.latitude=e,this.longitude=t}}const T=class T{async getCoordinatesFromCity(e){const t=await this.fetch(e),r=await this.getJsonFromResponse(t);return await this.getCoordinateFromJson(r)}async fetch(e){const t=this.getFetchUrl(e),r=await fetch(t);return this.validateResponse(r),r}getFetchUrl(e){const t=new URL(T.apiUrl);return t.searchParams.append("name",e),t.searchParams.append("count","1"),t.searchParams.append("language","en"),t.searchParams.append("format","json"),t}validateResponse(e){if(!e.ok)throw new Error("Network response was not ok")}async getJsonFromResponse(e){const t=await e.json();return this.validateJson(t),t}validateJson(e){if(!this.isGeocodingResponse(e))throw new Error("Invalid JSON structure")}isGeocodingResponse(e){return!(!e||typeof e!="object"||!("results"in e)||!Array.isArray(e.results)||e.results.length===0)}async getCoordinateFromJson(e){const{latitude:t,longitude:r}=e.results[0];return new V(t,r)}};T.apiUrl="https://geocoding-api.open-meteo.com/v1/search";let k=T;class I extends Error{constructor(e){super(e),this.name="TooManyRequestsError"}}var d=(i=>(i[i.SUM=0]="SUM",i[i.AVERAGE=1]="AVERAGE",i))(d||{});class F{add(e){this.validateType(e);const t=this.constructor;return new t(Number(this)+Number(e))}divide(e){this.validateType(e);const t=this.constructor;return new t(Number(this)/Number(e))}validateType(e){if(this.constructor!==e.constructor&&typeof e!="number")throw new TypeError("Cannot compare different unit types")}}class u extends F{constructor(e){super(),this.meters=e}static fromMillimeters(e){return new u(e/1e3)}static fromMeters(e){return new u(e)}static fromKilometers(e){return new u(e*1e3)}toMillimeters(){return this.meters*1e3}toMeters(){return this.meters}toKilometers(){return this.meters/1e3}getDisplayNumber(){return this.toMillimeters()}valueOf(){return this.meters}}class v extends F{constructor(e){super(),this.metersPerSecond=e}static fromMetersPerSecond(e){return new v(e)}static fromKilometersPerHour(e){return new v(e/3.6)}toMetersPerSecond(){return this.metersPerSecond}toKilometersPerHour(){return this.metersPerSecond*3.6}getDisplayNumber(){return this.toMetersPerSecond()}valueOf(){return this.metersPerSecond}}class f{kelvinToCelsius(e){return e-273.15}kelvinToFahrenheit(e){const t=this.kelvinToCelsius(e);return this.celsiusToFahrenheit(t)}celsiusToKelvin(e){return e+273.15}fahrenheitToKelvin(e){const t=this.fahrenheitToCelsius(e);return this.celsiusToKelvin(t)}celsiusToFahrenheit(e){return e*(9/5)+32}fahrenheitToCelsius(e){return(e-32)*(5/9)}}class p extends F{constructor(e){super(),this.kelvin=e}static fromKelvin(e){return new p(e)}static fromCelsius(e){const t=new f;return new p(t.celsiusToKelvin(e))}static fromFahrenheit(e){const t=new f;return new p(t.fahrenheitToKelvin(e))}toKelvin(){return this.kelvin}toCelsius(){return new f().kelvinToCelsius(this.kelvin)}toFahrenheit(){return new f().kelvinToFahrenheit(this.kelvin)}getDisplayNumber(){return this.toCelsius()}valueOf(){return this.kelvin}}const H={temperature:{increase:`Uh oh! It's getting hot in here!
The average temperature has increased by {change}°C since 1940.`,decrease:`Good news! It's cooling down!
The average temperature has decreased by {change}°C since 1940.`,unitConstructor:p.fromCelsius,openMeteoName:"temperature_2m_mean",color:"orangered",sumOrAverage:d.AVERAGE},windSpeed:{increase:"The average wind speed has increased by {change} m/s since 1940.",decrease:"The average wind speed has decreased by {change} m/s since 1940.",unitConstructor:v.fromKilometersPerHour,openMeteoName:"windspeed_10m_mean",color:"lightblue",sumOrAverage:d.AVERAGE},rainfall:{increase:"The average yearly rainfall has increased by {change} mm since 1940.",decrease:"The average yearly rainfall has decreased by {change} mm since 1940.",unitConstructor:u.fromMillimeters,openMeteoName:"rain_sum",color:"gray",sumOrAverage:d.SUM},snowfall:{increase:"The average yearly snowfall has increased by {change} mm since 1940.",decrease:"The average yearly snowfall has decreased by {change} mm since 1940.",unitConstructor:u.fromMillimeters,openMeteoName:"snowfall_sum",color:"lightgray",sumOrAverage:d.SUM}},l=H,O=Object.keys(l),A=1940,S=class S{async getDailyWeatherData(e,t,r){const n=await this.fetch(e,t,r),s=await this.getJsonFromResponse(n);return this.getWeatherDataFromJson(s,r)}async fetch(e,t,r){const n=this.getFetchUrl(e,t,r),s=await fetch(n);return this.validateResponse(s),s}getFetchUrl(e,t,r){const n=new URL(S.apiUrl);n.searchParams.append("latitude",e.latitude.toString()),n.searchParams.append("longitude",e.longitude.toString()),n.searchParams.append("start_date",this.convertDateToString(t.start)),n.searchParams.append("end_date",this.convertDateToString(t.end));for(const s of this.getListOfDailyParameters(r))n.searchParams.append("daily",s);return n.searchParams.append("format","json"),n}convertDateToString(e){return e.toISOString().split("T")[0]}getListOfDailyParameters(e){const t=[];for(const r of e)t.push(l[r].openMeteoName);return t}validateResponse(e){if(e.status===429)throw new I("Rate limit exceeded");if(!e.ok)throw new Error("Network response was not ok")}async getJsonFromResponse(e){const t=await e.json();return this.validateJson(t),t}validateJson(e){if(!this.isHistoricalJsonResponse(e))throw new Error("Invalid JSON structure")}isHistoricalJsonResponse(e){return!!(e&&typeof e=="object"&&"latitude"in e&&"longitude"in e&&"daily"in e&&typeof e.daily=="object")}getWeatherDataFromJson(e,t){const r=[];for(let n=0;n<e.daily.time.length;n++){const s={date:new Date(e.daily.time[n])};for(const h of t)s[h]=l[h].unitConstructor(e.daily[l[h].openMeteoName][n]);r.push(s)}return r}};S.apiUrl="https://archive-api.open-meteo.com/v1/archive";let R=S;class J{constructor(){this.callbacks=[],this.setForm(document.querySelector("#trend-form"))}setForm(e){this.assertIsForm(e),this.form=e,this.attachEventListener()}assertIsForm(e){if(!(e!==null&&e instanceof HTMLFormElement))throw new TypeError("Element is not a form")}attachEventListener(){this.form.addEventListener("submit",this.handleSubmitEvent.bind(this))}handleSubmitEvent(e){e.preventDefault(),this.validateInput()&&this.executeCallbacks()}validateInput(){return this.areAnyCheckboxesChecked()?!0:(this.reportNoCheckedCheckboxes(),!1)}areAnyCheckboxesChecked(){return this.getAllCheckboxes().some(t=>t.checked)}getAllCheckboxes(){return Array.from(this.form.querySelectorAll("input[type=checkbox]"))}reportNoCheckedCheckboxes(){const e=this.getSubmitButton();e.setCustomValidity("Please select at least one metric."),this.form.reportValidity(),e.setCustomValidity("")}getSubmitButton(){return this.form.querySelector("button[type=submit]")}executeCallbacks(){for(const e of this.callbacks)e(new FormData(this.form))}onSubmit(e){this.addCallback(e)}addCallback(e){this.callbacks.push(e)}}class K{constructor(e,t){this.start=e,this.end=t,this.validateRange(e,t)}validateRange(e,t){if(e>=t)throw new Error("Start date must be before end date")}}class j{constructor(e,t){this.weatherData=e,this.metric=t}getYearlyData(){const e=this.getYearlySums(),t=this.getYearlyCounts();return l[this.metric].sumOrAverage===d.SUM?e:this.getYearlyAveragesFromSumsAndCounts(e,t)}getYearlySums(){const e={};for(const t of this.weatherData){const r=new Date(t.date).getFullYear();t[this.metric]!==void 0&&(e[r]!==void 0?e[r]=e[r].add(t[this.metric]):e[r]=t[this.metric])}return e}getYearlyCounts(){const e={};for(const t of this.weatherData){const r=new Date(t.date).getFullYear();t[this.metric]!==void 0&&(e[r]??=0,e[r]++)}return e}getYearlyAveragesFromSumsAndCounts(e,t){const r={};for(const n in e){const s=Number(n);r[s]=e[s].divide(t[s])}return r}}class z{constructor(e){this.historicalApi=e}async getYearlyWeatherData(e,t){const r=await this.getRawWeatherData(e,t);return this.getYearlyAveragesFromRawData(r)}async getRawWeatherData(e,t){return await this.historicalApi.getDailyWeatherData(e,new K(new Date(`${A}-01-01`),new Date),t)}getYearlyAveragesFromRawData(e){const t={};for(const r of O){const n=new j(e,r);t[r]=n.getYearlyData()}return this.consolidateWeatherDataByYear(t)}consolidateWeatherDataByYear(e){const t=[];for(let r=A;r<=new Date().getFullYear();r++){const n={date:new Date(`${r}-01-01`)};for(const s of Object.keys(e))n[s]=e[s][r]??null;t.push(n)}return t}}const G=document.createElement("template");G.innerHTML=`
<canvas id="chart"></canvas>
`;const B=document.createElement("template");B.innerHTML=`
<style>

canvas {
  box-sizing: border-box;
  border: 1px solid black;
}

</style>
`;class a{_x=0;_y=0;constructor(e,t){this.validateNumber(e),this.validateNumber(t),this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}validateNumber(e){if(typeof e!="number")throw new TypeError("argument must be number")}}class w{_top=0;_left=0;_right=0;_bottom=0;constructor(e,t){this.validatePoint(e),this.validatePoint(t),this._top=e.y,this._left=e.x,this._bottom=t.y,this._right=t.x}get topLeft(){return new a(this.left,this.top)}get topRight(){return new a(this.right,this.top)}get bottomRight(){return new a(this.right,this.bottom)}get bottomLeft(){return new a(this.left,this.bottom)}get top(){return this._top}get right(){return this._right}get bottom(){return this._bottom}get left(){return this._left}get width(){return this.right-this.left}get height(){return this.bottom-this.top}validatePoint(e){if(!(e instanceof a))throw new TypeError("argument not of type Point")}}class x{_start;_end;constructor(e,t){this._start=e,this._end=t}get start(){return this._start}get end(){return this._end}get length(){const e=this.end.x-this.start.x,t=this.end.y-this.start.y;return Math.hypot(e,t)}}class _{source;target;constructor(e,t){this.source=e,this.target=t}mapPoint(e){const t=this.translatePointFromSource(e),r=this.scalePointToTarget(t);return this.translatePointToTarget(r)}translatePointFromSource(e){return new a(e.x-this.source.left,e.y-this.source.top)}scalePointToTarget(e){return new a(e.x/this.source.width*this.target.width,e.y/this.source.height*this.target.height)}translatePointToTarget(e){return new a(e.x+this.target.left,e.y+this.target.top)}reverseMapPoint(e){const t=this.translatePointFromTarget(e),r=this.scalePointToSource(t);return this.translatePointToSource(r)}translatePointFromTarget(e){return new a(e.x-this.target.left,e.y-this.target.top)}scalePointToSource(e){return new a(e.x/this.target.width*this.source.width,e.y/this.target.height*this.source.height)}translatePointToSource(e){return new a(e.x+this.source.left,e.y+this.source.top)}mapRectangle(e){const t=this.mapPoint(e.topLeft),r=this.mapPoint(e.bottomRight);return new w(t,r)}reverseMapRectangle(e){const t=this.reverseMapPoint(e.topLeft),r=this.reverseMapPoint(e.bottomRight);return new w(t,r)}mapLineSegment(e){return new x(this.mapPoint(e.start),this.mapPoint(e.end))}reverseMapLineSegment(e){return new x(this.reverseMapPoint(e.start),this.reverseMapPoint(e.end))}}class ${canvasWidth=0;canvasHeight=0}const y=35;class q extends ${_lines=[];_scaleInterval=50;_paddingX=0;_paddingY=0;_viewport=null;_boundingBoxOfLines=this.calculateBoundingBoxOfLines();constructor(){super()}addLine(e){this._lines.push(e),this._boundingBoxOfLines=this.calculateBoundingBoxOfLines()}clearLines(){this._lines=[],this._boundingBoxOfLines=this.calculateBoundingBoxOfLines()}calculateBoundingBoxOfLines(){let e=new a(1/0,-1/0),t=new a(-1/0,1/0);for(const r of this.lines.flatMap(n=>n.points))e=new a(Math.min(r.x,e.x),Math.max(r.y,e.y)),t=new a(Math.max(r.x,t.x),Math.min(r.y,t.y));return new w(e,t)}get lines(){return this._lines}get boundingBoxOfLines(){return this._boundingBoxOfLines}set viewport(e){this._viewport=e}get viewport(){return this._viewport===null&&this.autoFit(),this._viewport}autoFit(e={}){this.paddingX=e.paddingX??0,this.paddingY=e.paddingY??0;const t=new _(this.boundingBoxOfLines,this.pixelViewportMinusPadding);this.viewport=t.reverseMapRectangle(this.pixelViewport)}set axisTickInterval(e){if(typeof e!="number"||e<=0||!Number.isFinite(e))throw new TypeError("scale interval must be a positive number");this._scaleInterval=e}get axisTickInterval(){return this._scaleInterval}set paddingX(e){if(typeof e!="number"||e<0||!Number.isFinite(e))throw new TypeError("padding must be a non-negative number");this._paddingX=e}get paddingX(){return this._paddingX}set paddingY(e){if(typeof e!="number"||e<0||!Number.isFinite(e))throw new TypeError("padding must be a non-negative number");this._paddingY=e}get paddingY(){return this._paddingY}get pixelViewportMinusPadding(){const e=y+this.paddingX,t=this.paddingY,r=this.canvasWidth-this.paddingX,n=this.canvasHeight-y-this.paddingY;return new w(new a(e,t),new a(r,n))}get pixelViewport(){const e=y,t=0,r=this.canvasWidth,n=this.canvasHeight-y;return new w(new a(e,t),new a(r,n))}get chartToScreenMapper(){return new _(this.viewport,this.pixelViewport)}}class b{cssColor;constructor(e="black"){this.cssColor=e}toString(){return this.cssColor}}var o;(function(i){i[i.X=0]="X",i[i.Y=1]="Y"})(o||(o={}));const g=35,M=g*.2,P=M+g*.1,E="Arial";let N=class{start;end;constructor(e=0,t=1){this.validateNumber(e),this.validateNumber(t),this.start=e,this.end=t}validateNumber(e){if(typeof e!="number")throw new TypeError("argument must be number")}get length(){return this.end-this.start}};class Q{*generate(e,t){const r=e.length/t,n=this.roundToNiceTickInterval(r);for(let s=Math.ceil(e.start/n)*n;s<=e.end;s+=n)yield s}roundToNiceTickInterval(e){const t=this.getPossibleTickIntervals(e);return this.getClosestNumberInArray(e,t)}getPossibleTickIntervals(e){const t=this.getClosestPowerOfTen(e);return[t,t*2,t*5]}getClosestPowerOfTen(e){return Math.pow(10,Math.floor(Math.log10(e)))}getClosestNumberInArray(e,t){return t.reduce((r,n)=>Math.abs(e-n)<Math.abs(e-r)?n:r)}}class C{axis;chartState;constructor(e,t){this.axis=e,this.chartState=t}generate(){return new Q().generate(this.getViewportRange(),this.getGoalNumberOfTicks())}getViewportRange(){if(this.axis===o.X)return this.getViewportRangeAlongX();if(this.axis===o.Y)return this.getViewportRangeAlongY();throw new TypeError("invalid axis")}getViewportRangeAlongX(){return new N(this.chartState.viewport.left,this.chartState.viewport.right)}getViewportRangeAlongY(){return new N(this.chartState.viewport.bottom,this.chartState.viewport.top)}getGoalNumberOfTicks(){return this.getPixelViewportSize()/this.chartState.axisTickInterval}getPixelViewportSize(){if(this.axis===o.X)return this.chartState.pixelViewport.width;if(this.axis===o.Y)return this.chartState.pixelViewport.height;throw new TypeError("invalid axis")}}class m{renderingContext;constructor(e){this.renderingContext=e}resetRenderingContext(){this.renderingContext.reset(),this.renderingContext.save()}resetStyle(){this.renderingContext.restore(),this.renderingContext.save()}fillBackground(e){this.renderingContext.fillStyle=e.toString(),this.renderingContext.fillRect(0,0,this.renderingContext.canvas.width,this.renderingContext.canvas.height)}drawLineBetweenPoints(e,t){this.renderingContext.beginPath(),this.renderingContext.moveTo(e.x,e.y),this.renderingContext.lineTo(t.x,t.y),this.renderingContext.stroke()}}class Z{renderingContext;chartState;renderingUtilities;constructor(e,t){this.renderingContext=e,this.chartState=t,this.renderingUtilities=new m(e)}render(){this.drawAxis(new C(o.X,this.chartState).generate(),o.X),this.drawAxis(new C(o.Y,this.chartState).generate(),o.Y)}drawAxis(e,t){for(let r=e.next().value;r!==void 0;r=e.next().value)this.renderingUtilities.resetStyle(),this.drawTickAndLabel(r,t)}drawTickAndLabel(e,t){const r=this.getTickPosition(e,t);this.drawTick(r,t);const n=this.getTickLabelPosition(r,t),s=this.numberToString(e);this.setAxisLabelStyle(s,t),this.drawTickLabel(n,s)}setAxisLabelStyle(e,t){this.setLabelFont(e,g-P),this.renderingContext.fillStyle="black",this.renderingContext.textAlign=t===o.X?"center":"right",this.renderingContext.textBaseline=t===o.X?"top":"middle"}setLabelFont(e,t){let r=13;for(this.renderingContext.font=`${r}px ${E}`;this.renderingContext.measureText(e).width>t;)r-=.1,this.renderingContext.font=`${r}px ${E}`}getTickPosition(e,t){let r;return t===o.X?r=new a(e,this.chartState.viewport.bottom):r=new a(this.chartState.viewport.left,e),this.chartState.chartToScreenMapper.mapPoint(r)}drawTick(e,t){let r;t===o.X?r=new a(e.x,e.y+M):r=new a(e.x-M,e.y),this.renderingUtilities.drawLineBetweenPoints(e,r)}getTickLabelPosition(e,t){let r;return t===o.X?r=new a(e.x,e.y+P):r=new a(e.x-P,e.y),r}numberToString(e){return this.roundToDecimalPlaces(e,10).toString()}roundToDecimalPlaces(e,t){return parseFloat(e.toFixed(t))}drawTickLabel(e,t){this.renderingContext.fillText(t,e.x,e.y)}}class ee{renderingContext;chartState;renderingUtilities;constructor(e,t){this.renderingContext=e,this.chartState=t,this.renderingUtilities=new m(e)}render(){this.drawGridLines(new C(o.X,this.chartState).generate(),o.X),this.drawGridLines(new C(o.Y,this.chartState).generate(),o.Y)}drawGridLines(e,t){for(let r=e.next().value;r!==void 0;r=e.next().value)this.drawGridLine(r,t)}drawGridLine(e,t){const r=this.getPixelGridLineSegment(e,t);this.setGridLineStyle(),this.drawLineSegment(r)}getPixelGridLineSegment(e,t){const r=this.getGridLineSegment(e,t);return this.chartState.chartToScreenMapper.mapLineSegment(r)}getGridLineSegment(e,t){if(t===o.X)return this.getGridLineSegmentOnX(e);if(t===o.Y)return this.getGridLineSegmentOnY(e);throw new TypeError("invalid axis")}getGridLineSegmentOnX(e){return new x(new a(e,this.chartState.viewport.bottom),new a(e,this.chartState.viewport.top))}getGridLineSegmentOnY(e){return new x(new a(this.chartState.viewport.left,e),new a(this.chartState.viewport.right,e))}setGridLineStyle(){this.renderingUtilities.resetStyle(),this.renderingContext.strokeStyle="#e0e0e0"}drawLineSegment(e){this.renderingUtilities.drawLineBetweenPoints(e.start,e.end)}}class te{renderingContext;chartState;renderingUtilities;constructor(e,t){this.renderingContext=e,this.chartState=t,this.renderingUtilities=new m(e)}render(){for(const e of this.chartState.lines)this.drawLine(e)}drawLine(e){this.setChartLineStyle(e),this.renderingContext.beginPath();for(const t of e.points){const r=this.chartState.chartToScreenMapper.mapPoint(t);this.renderingContext.lineTo(r.x,r.y)}this.renderingContext.stroke()}setChartLineStyle(e){this.renderingUtilities.resetStyle(),this.renderingContext.strokeStyle=e.color.toString(),this.renderingContext.lineWidth=e.thickness,this.renderingContext.lineCap="round",this.renderingContext.lineJoin="round"}}class re{renderingContext;chartState;renderingUtilities;constructor(e,t){this.renderingContext=e,this.chartState=t,this.renderingUtilities=new m(e)}render(){this.renderingUtilities.resetStyle(),this.drawRectangle(this.chartState.pixelViewport)}drawRectangle(e){this.renderingContext.beginPath(),this.renderingContext.rect(e.left,e.top,e.width,e.height),this.renderingContext.stroke()}}class ne{renderingContext;renderingUtilities;constructor(e){this.renderingContext=e,this.renderingUtilities=new m(e)}render(){this.drawLeftMargin(),this.drawBottomMargin()}drawLeftMargin(){this.renderingUtilities.resetStyle(),this.renderingContext.fillStyle="white",this.renderingContext.fillRect(0,0,g,this.renderingContext.canvas.height)}drawBottomMargin(){this.renderingUtilities.resetStyle(),this.renderingContext.fillStyle="white",this.renderingContext.fillRect(0,this.renderingContext.canvas.height-g,this.renderingContext.canvas.width,g)}}class ie{renderingContext;chartState;renderingUtilities;constructor(e,t){this.renderingContext=e,this.chartState=t,this.renderingUtilities=new m(e)}render(){this.clear(),new ee(this.renderingContext,this.chartState).render(),new te(this.renderingContext,this.chartState).render(),new ne(this.renderingContext).render(),new re(this.renderingContext,this.chartState).render(),new Z(this.renderingContext,this.chartState).render()}clear(){this.renderingUtilities.resetRenderingContext(),this.renderingUtilities.fillBackground(new b("white"))}}const Y="line-chart";class W extends HTMLElement{chart=null;renderingContext=null;state=new q;renderer=null;_width=500;_height=500;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot?.appendChild(G.content.cloneNode(!0)),this.shadowRoot?.appendChild(B.content.cloneNode(!0)),this.updateCanvasSize()}async connectedCallback(){this.chart=this.shadowRoot.querySelector("#chart")??null,this.updateCanvasSize(),this.chart&&(this.renderingContext=this.chart.getContext("2d"),this.renderer=new ie(this.renderingContext,this.state),this.renderer.render())}disconnectedCallback(){}attributeChangedCallback(e,t,r){if(t!==r)switch(e){case"axisTickInterval":this.axisTickInterval=r;break;case"width":this.width=r;break;case"height":this.height=r;break}}static get observedAttributes(){return["axisTickInterval","width","height"]}addLine(e){this.state.addLine(e),this.renderer?.render()}clearLines(){this.state.clearLines(),this.renderer?.render()}setViewport(e){this.state.viewport=e,this.renderer?.render()}autoFitViewport(e={}){this.state.autoFit(e),this.renderer?.render()}set axisTickInterval(e){this.state.axisTickInterval=Number(e),this.renderer?.render()}get width(){return this._width}set width(e){const t=Number(e);if(!Number.isFinite(t)||t<=0)throw new TypeError("width must be a positive number");this._width=t,this.updateCanvasSize()}get height(){return this._height}set height(e){const t=Number(e);if(!Number.isFinite(t)||t<=0)throw new TypeError("height must be a positive number");this._height=t,this.updateCanvasSize()}updateCanvasSize(){this.state.canvasWidth=this.width,this.state.canvasHeight=this.height,this.chart&&(this.chart.width=this.width,this.chart.height=this.height,this.renderer?.render())}}customElements.get(Y)||customElements.define(Y,W);class U{_points;_color;_thickness;constructor(e=[],t){for(const r of e)if(!(r instanceof a))throw new TypeError("input array contains non-Point element");this._points=Array.from(e),this._color=t?.color??new b,this._thickness=t?.thickness??1}get points(){return this._points}get color(){return this._color}get thickness(){return this._thickness}}class se{constructor(){if(this.resultDiv=document.querySelector("#result-div"),!this.resultDiv)throw new Error("Result div not found")}renderLoadingMessage(e){this.replaceWithText(`Loading data for ${e}...
This may take up to a minute.`)}replaceWithText(e){this.clear(),this.resultDiv.appendChild(this.stringToPreTag(e))}clear(){this.resultDiv.innerHTML=""}stringToPreTag(e){const t=document.createElement("pre");return t.textContent=e,t}renderCouldNotFindCityMessage(e){this.replaceWithText(`Could not find city: ${e}`)}renderRateLimitExceededMessage(){this.replaceWithText("Rate limit exceeded. Please try again in a few minutes.")}renderChart(e,t){const r=this.createTrendMessageElement(e,t),n=this.createChart(e,t);this.resultDiv.appendChild(r),this.resultDiv.appendChild(n)}createTrendMessageElement(e,t){const r=e.regression[e.regression.length-1].y-e.regression[0].y;return this.stringToPreTag(this.getChangeMessage(t,r))}getChangeMessage(e,t){return this.getChangeMessageTemplate(e,t).replace("{change}",Math.abs(t).toFixed(2))}getChangeMessageTemplate(e,t){return t>0?l[e].increase:t<0?l[e].decrease:""}createChart(e,t){const r=new W,n=this.createLines(e,t);for(const s of n)r.addLine(s);return r.autoFitViewport({paddingY:50}),r}createLines(e,t){return[new U(e.rawPoints,{color:new b(l[t].color),thickness:3}),new U(e.regression,{color:new b("black"),thickness:2})]}}class ae{constructor(e){this.formData=e}getCity(){const e=this.formData.get("city")?.toString();if(!e)throw new Error("City is required");return e}getWeatherMetrics(){const e=[];for(const t of O)this.formData.get(t)&&e.push(t);return e}}class oe{getRegressionLine(e,t){if(e.length<2)return[];const r=this.calculateLinearRegression(e);return this.createLineFromRegression(r,t)}calculateLinearRegression(e){const t=e.length,r=e.reduce((c,L)=>c+L.x,0)/t,n=e.reduce((c,L)=>c+L.y,0)/t;let s=0,h=0;for(let c=0;c<t;c++)s+=(e[c].x-r)*(e[c].y-n),h+=(e[c].x-r)**2;const D=s/h,X=n-D*r;return{slope:D,intercept:X}}createLineFromRegression(e,t){const r=new a(t.start,e.intercept+e.slope*t.start),n=new a(t.end,e.intercept+e.slope*t.end);return[r,n]}}class he{constructor(e=0,t=1){this.validateNumber(e),this.validateNumber(t),this.start=e,this.end=t}validateNumber(e){if(typeof e!="number")throw new TypeError("argument must be number")}get length(){return this.end-this.start}}class ce{constructor(e,t){this.weatherData=e,this.metric=t}getChartData(){const e=this.getPoints(),r=new oe().getRegressionLine(e,new he(e[0]?.x??0,e[e.length-1]?.x??0));return{rawPoints:e,regression:r}}getPoints(){return this.weatherData.filter(e=>e[this.metric]!==void 0).map(e=>new a(e.date.getFullYear(),e[this.metric].getDisplayNumber()??0))}}class le{constructor(){this.formHandler=new J,this.weatherRetriever=new z(new R),this.renderer=new se}init(){this.formHandler.onSubmit(this.handleSubmit.bind(this))}async handleSubmit(e){const{city:t,metrics:r}=this.parseFormData(e);this.displayTrendGraphs(t,r)}parseFormData(e){const t=new ae(e);return{city:t.getCity(),metrics:t.getWeatherMetrics()}}async displayTrendGraphs(e,t){this.renderer.renderLoadingMessage(e);const r=await this.getCoordinates(e),n=await this.getWeatherData(r,t);this.renderWeatherData(n,t)}async getCoordinates(e){const t=new k;try{return await t.getCoordinatesFromCity(e)}catch{throw this.renderer.renderCouldNotFindCityMessage(e),new Error("Could not get coordinates")}}async getWeatherData(e,t){try{return await this.weatherRetriever.getYearlyWeatherData(e,t)}catch(r){throw r instanceof I&&this.renderer.renderRateLimitExceededMessage(),r}}async renderWeatherData(e,t){this.renderer.clear();for(const r of t)this.renderSingleMetricWeatherData(e,r)}async renderSingleMetricWeatherData(e,t){const n=new ce(e,t).getChartData();this.renderer.renderChart(n,t)}}class de{run(){new le().init()}}const ue=new de;ue.run();
